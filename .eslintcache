[{"/Users/jwlbaart/git/frontmen/resumator/src/App.js":"1","/Users/jwlbaart/git/frontmen/resumator/src/index.js":"2","/Users/jwlbaart/git/frontmen/resumator/src/serviceWorker.js":"3","/Users/jwlbaart/git/frontmen/resumator/src/layouts/Login.jsx":"4","/Users/jwlbaart/git/frontmen/resumator/src/layouts/Main.jsx":"5","/Users/jwlbaart/git/frontmen/resumator/src/pages/Home.jsx":"6","/Users/jwlbaart/git/frontmen/resumator/src/context/FirebaseContext/index.js":"7","/Users/jwlbaart/git/frontmen/resumator/src/config/theme.js":"8","/Users/jwlbaart/git/frontmen/resumator/src/pages/PdfPreviewer/index.jsx":"9","/Users/jwlbaart/git/frontmen/resumator/src/pages/Overview/index.jsx":"10","/Users/jwlbaart/git/frontmen/resumator/src/pages/LivePreviewer/index.jsx":"11","/Users/jwlbaart/git/frontmen/resumator/src/pages/HTMLPreviewer/index.jsx":"12","/Users/jwlbaart/git/frontmen/resumator/src/pages/Creator/index.jsx":"13","/Users/jwlbaart/git/frontmen/resumator/src/context/FirebaseContext/getFirebaseConfig.js":"14","/Users/jwlbaart/git/frontmen/resumator/src/config/initialData.js":"15","/Users/jwlbaart/git/frontmen/resumator/src/hooks/useResume.js":"16","/Users/jwlbaart/git/frontmen/resumator/src/components/layout/index.js":"17","/Users/jwlbaart/git/frontmen/resumator/src/components/LivePreviewerComponents/LivePreviewerTemplate.tsx":"18","/Users/jwlbaart/git/frontmen/resumator/src/pages/Overview/UserRedirect.jsx":"19","/Users/jwlbaart/git/frontmen/resumator/src/components/PDFTemplate/PDFTemplate.jsx":"20","/Users/jwlbaart/git/frontmen/resumator/src/pages/Overview/AdminView.jsx":"21","/Users/jwlbaart/git/frontmen/resumator/src/lib/date.ts":"22","/Users/jwlbaart/git/frontmen/resumator/src/components/ResumeComponents/index.js":"23","/Users/jwlbaart/git/frontmen/resumator/src/components/layout/Nav.jsx":"24","/Users/jwlbaart/git/frontmen/resumator/src/components/LivePreviewerComponents/PreviewControls.tsx":"25","/Users/jwlbaart/git/frontmen/resumator/src/components/LivePreviewerComponents/Skills.tsx":"26","/Users/jwlbaart/git/frontmen/resumator/src/components/LivePreviewerComponents/Experience.tsx":"27","/Users/jwlbaart/git/frontmen/resumator/src/components/LivePreviewerComponents/Education.tsx":"28","/Users/jwlbaart/git/frontmen/resumator/src/components/LivePreviewerComponents/SideProjects.tsx":"29","/Users/jwlbaart/git/frontmen/resumator/src/components/LivePreviewerComponents/TopSection.tsx":"30","/Users/jwlbaart/git/frontmen/resumator/src/lib/getAvatarDataUri.ts":"31","/Users/jwlbaart/git/frontmen/resumator/src/lib/downloadResume.tsx":"32","/Users/jwlbaart/git/frontmen/resumator/src/components/ResumeComponents/ResumeSkills.js":"33","/Users/jwlbaart/git/frontmen/resumator/src/components/LivePreviewerComponents/PDFPreviewModal.jsx":"34","/Users/jwlbaart/git/frontmen/resumator/src/components/PDFBuilderComponents/PDFSideProjects.jsx":"35","/Users/jwlbaart/git/frontmen/resumator/src/pages/Overview/constants/tableIcons.jsx":"36","/Users/jwlbaart/git/frontmen/resumator/src/config/skills.constants.js":"37","/Users/jwlbaart/git/frontmen/resumator/src/components/ResumeComponents/ResumeExperience.jsx":"38","/Users/jwlbaart/git/frontmen/resumator/src/components/ResumeComponents/ResumeHeader.jsx":"39","/Users/jwlbaart/git/frontmen/resumator/src/components/ResumeComponents/ResumeEducation.jsx":"40","/Users/jwlbaart/git/frontmen/resumator/src/components/ResumeComponents/ResumeAbout.jsx":"41","/Users/jwlbaart/git/frontmen/resumator/src/components/PDFBuilderComponents/index.js":"42","/Users/jwlbaart/git/frontmen/resumator/src/components/LivePreviewerComponents/SectionEditDialog.tsx":"43","/Users/jwlbaart/git/frontmen/resumator/src/components/LivePreviewerComponents/Section.tsx":"44","/Users/jwlbaart/git/frontmen/resumator/src/components/Form/FormRichTextEditor.tsx":"45","/Users/jwlbaart/git/frontmen/resumator/src/components/LivePreviewerComponents/SideProjectItem.tsx":"46","/Users/jwlbaart/git/frontmen/resumator/src/components/LivePreviewerComponents/EducationItem.tsx":"47","/Users/jwlbaart/git/frontmen/resumator/src/components/LivePreviewerComponents/SectionHeader.tsx":"48","/Users/jwlbaart/git/frontmen/resumator/src/components/LivePreviewerComponents/DetailWithIcon.tsx":"49","/Users/jwlbaart/git/frontmen/resumator/src/components/LivePreviewerComponents/ExperienceItem.tsx":"50","/Users/jwlbaart/git/frontmen/resumator/src/lib/createDocx.ts":"51","/Users/jwlbaart/git/frontmen/resumator/src/assets/images/avatars/index.js":"52","/Users/jwlbaart/git/frontmen/resumator/src/components/Material/index.ts":"53","/Users/jwlbaart/git/frontmen/resumator/src/components/Form/index.ts":"54","/Users/jwlbaart/git/frontmen/resumator/src/components/PDFBuilderComponents/PDFHeader.jsx":"55","/Users/jwlbaart/git/frontmen/resumator/src/components/PDFBuilderComponents/PDFWorkExperience.jsx":"56","/Users/jwlbaart/git/frontmen/resumator/src/components/PDFBuilderComponents/PDFProjects.jsx":"57","/Users/jwlbaart/git/frontmen/resumator/src/components/LivePreviewerComponents/SectionItemHeader.tsx":"58","/Users/jwlbaart/git/frontmen/resumator/src/components/Form/FormRichTextDraftEditor.tsx":"59","/Users/jwlbaart/git/frontmen/resumator/src/components/Material/DropdownButton.tsx":"60","/Users/jwlbaart/git/frontmen/resumator/src/components/Form/FormAvatarSelect.tsx":"61","/Users/jwlbaart/git/frontmen/resumator/src/components/Form/FormTextField.tsx":"62","/Users/jwlbaart/git/frontmen/resumator/src/components/Form/FormSkillsSelect.tsx":"63","/Users/jwlbaart/git/frontmen/resumator/src/components/Form/FormRow.tsx":"64","/Users/jwlbaart/git/frontmen/resumator/src/components/Material/SpacedButton.tsx":"65","/Users/jwlbaart/git/frontmen/resumator/src/components/Form/FormDatePicker.tsx":"66","/Users/jwlbaart/git/frontmen/resumator/src/components/Form/FormColumn.tsx":"67","/Users/jwlbaart/git/frontmen/resumator/src/components/Material/TooltipIconButton.tsx":"68","/Users/jwlbaart/git/frontmen/resumator/src/components/PDFBuilderComponents/ProjectsExperienceCard.jsx":"69","/Users/jwlbaart/git/frontmen/resumator/src/components/Form/FormSkillsSelectAutocomplete.tsx":"70","/Users/jwlbaart/git/frontmen/resumator/src/components/PDFBuilderComponents/PDFDescription.jsx":"71","/Users/jwlbaart/git/frontmen/resumator/src/components/Form/FormSkillsSelectChip.tsx":"72","/Users/jwlbaart/git/frontmen/resumator/src/components/PDFBuilderComponents/PDFEducation.jsx":"73","/Users/jwlbaart/git/frontmen/resumator/src/components/PDFBuilderComponents/PDFSkills.jsx":"74","/Users/jwlbaart/git/frontmen/resumator/src/components/PDFBuilderComponents/PDFIntroduction.jsx":"75","/Users/jwlbaart/git/frontmen/resumator/src/lib/formatResumeFilename.ts":"76"},{"size":1668,"mtime":1611664273625,"results":"77","hashOfConfig":"78"},{"size":482,"mtime":1611057140627,"results":"79","hashOfConfig":"78"},{"size":5103,"mtime":1611664755292,"results":"80","hashOfConfig":"78"},{"size":683,"mtime":1611046715395,"results":"81","hashOfConfig":"78"},{"size":1094,"mtime":1611228203459,"results":"82","hashOfConfig":"78"},{"size":1107,"mtime":1611046715396,"results":"83","hashOfConfig":"78"},{"size":1746,"mtime":1611155521267,"results":"84","hashOfConfig":"78"},{"size":361,"mtime":1610694717573,"results":"85","hashOfConfig":"78"},{"size":1130,"mtime":1610694717576,"results":"86","hashOfConfig":"78"},{"size":832,"mtime":1611228203461,"results":"87","hashOfConfig":"78"},{"size":1440,"mtime":1610694717575,"results":"88","hashOfConfig":"78"},{"size":1642,"mtime":1610694717575,"results":"89","hashOfConfig":"78"},{"size":509,"mtime":1610694717575,"results":"90","hashOfConfig":"78"},{"size":794,"mtime":1610694717573,"results":"91","hashOfConfig":"78"},{"size":178,"mtime":1610694717573,"results":"92","hashOfConfig":"78"},{"size":697,"mtime":1610694717573,"results":"93","hashOfConfig":"78"},{"size":40,"mtime":1610694717572,"results":"94","hashOfConfig":"78"},{"size":4569,"mtime":1611228203456,"results":"95","hashOfConfig":"78"},{"size":436,"mtime":1611228203460,"results":"96","hashOfConfig":"78"},{"size":2029,"mtime":1610961526827,"results":"97","hashOfConfig":"78"},{"size":6080,"mtime":1611228203459,"results":"98","hashOfConfig":"78"},{"size":1649,"mtime":1611664755098,"results":"99","hashOfConfig":"78"},{"size":247,"mtime":1610694717572,"results":"100","hashOfConfig":"78"},{"size":5690,"mtime":1611228203458,"results":"101","hashOfConfig":"78"},{"size":1646,"mtime":1611156174305,"results":"102","hashOfConfig":"78"},{"size":1423,"mtime":1611664754802,"results":"103","hashOfConfig":"78"},{"size":3303,"mtime":1611664754657,"results":"104","hashOfConfig":"78"},{"size":2823,"mtime":1611664754624,"results":"105","hashOfConfig":"78"},{"size":2893,"mtime":1611664754791,"results":"106","hashOfConfig":"78"},{"size":5908,"mtime":1611664754825,"results":"107","hashOfConfig":"78"},{"size":238,"mtime":1611664755124,"results":"108","hashOfConfig":"78"},{"size":1389,"mtime":1611664755116,"results":"109","hashOfConfig":"78"},{"size":682,"mtime":1610694717572,"results":"110","hashOfConfig":"78"},{"size":884,"mtime":1610694717568,"results":"111","hashOfConfig":"78"},{"size":1255,"mtime":1611041065535,"results":"112","hashOfConfig":"78"},{"size":2335,"mtime":1611664952464,"results":"113","hashOfConfig":"78"},{"size":197,"mtime":1610694717573,"results":"114","hashOfConfig":"78"},{"size":1029,"mtime":1610694717572,"results":"115","hashOfConfig":"78"},{"size":559,"mtime":1610694717572,"results":"116","hashOfConfig":"78"},{"size":320,"mtime":1610694717572,"results":"117","hashOfConfig":"78"},{"size":306,"mtime":1610694717572,"results":"118","hashOfConfig":"78"},{"size":284,"mtime":1610694717571,"results":"119","hashOfConfig":"78"},{"size":2395,"mtime":1611664754734,"results":"120","hashOfConfig":"78"},{"size":455,"mtime":1611664754721,"results":"121","hashOfConfig":"78"},{"size":1257,"mtime":1611664754468,"results":"122","hashOfConfig":"78"},{"size":1297,"mtime":1611664754764,"results":"123","hashOfConfig":"78"},{"size":1750,"mtime":1611664754637,"results":"124","hashOfConfig":"78"},{"size":1517,"mtime":1611664754743,"results":"125","hashOfConfig":"78"},{"size":414,"mtime":1611664754607,"results":"126","hashOfConfig":"78"},{"size":3078,"mtime":1611664754675,"results":"127","hashOfConfig":"78"},{"size":2797,"mtime":1611664755083,"results":"128","hashOfConfig":"78"},{"size":605,"mtime":1610694717563,"results":"129","hashOfConfig":"78"},{"size":103,"mtime":1611664754839,"results":"130","hashOfConfig":"78"},{"size":196,"mtime":1611664754526,"results":"131","hashOfConfig":"78"},{"size":1868,"mtime":1611041065533,"results":"132","hashOfConfig":"78"},{"size":652,"mtime":1611041065536,"results":"133","hashOfConfig":"78"},{"size":677,"mtime":1611041065535,"results":"134","hashOfConfig":"78"},{"size":2421,"mtime":1611664754756,"results":"135","hashOfConfig":"78"},{"size":4821,"mtime":1611664754458,"results":"136","hashOfConfig":"78"},{"size":1430,"mtime":1611664754836,"results":"137","hashOfConfig":"78"},{"size":2196,"mtime":1611664754405,"results":"138","hashOfConfig":"78"},{"size":434,"mtime":1611664754522,"results":"139","hashOfConfig":"78"},{"size":799,"mtime":1611664754484,"results":"140","hashOfConfig":"78"},{"size":258,"mtime":1611664754475,"results":"141","hashOfConfig":"78"},{"size":196,"mtime":1611664754843,"results":"142","hashOfConfig":"78"},{"size":1014,"mtime":1611664754419,"results":"143","hashOfConfig":"78"},{"size":274,"mtime":1611664754410,"results":"144","hashOfConfig":"78"},{"size":583,"mtime":1611664754847,"results":"145","hashOfConfig":"78"},{"size":2078,"mtime":1611228203457,"results":"146","hashOfConfig":"78"},{"size":3086,"mtime":1611664754500,"results":"147","hashOfConfig":"78"},{"size":3010,"mtime":1611041065532,"results":"148","hashOfConfig":"78"},{"size":2888,"mtime":1611664754516,"results":"149","hashOfConfig":"78"},{"size":1025,"mtime":1611041065533,"results":"150","hashOfConfig":"78"},{"size":1625,"mtime":1611041065535,"results":"151","hashOfConfig":"78"},{"size":465,"mtime":1611041065534,"results":"152","hashOfConfig":"78"},{"size":177,"mtime":1611664755120,"results":"153","hashOfConfig":"78"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},"3h7d7o",{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"156"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"156"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"156"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"195"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"195"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"195"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"195"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"195"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"195"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"195"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"195"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"195"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"195"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"195"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"195"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"195"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"195"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"195"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"195"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"195"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"195"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"156"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"195"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"297","usedDeprecatedRules":"195"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300","usedDeprecatedRules":"195"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303","usedDeprecatedRules":"195"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"195"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"195"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"195"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"195"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"195"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"195"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328","usedDeprecatedRules":"195"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333","usedDeprecatedRules":"195"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jwlbaart/git/frontmen/resumator/src/App.js",[],["342","343"],"/Users/jwlbaart/git/frontmen/resumator/src/index.js",[],"/Users/jwlbaart/git/frontmen/resumator/src/serviceWorker.js",[],"/Users/jwlbaart/git/frontmen/resumator/src/layouts/Login.jsx",[],"/Users/jwlbaart/git/frontmen/resumator/src/layouts/Main.jsx",[],"/Users/jwlbaart/git/frontmen/resumator/src/pages/Home.jsx",[],"/Users/jwlbaart/git/frontmen/resumator/src/context/FirebaseContext/index.js",[],"/Users/jwlbaart/git/frontmen/resumator/src/config/theme.js",[],"/Users/jwlbaart/git/frontmen/resumator/src/pages/PdfPreviewer/index.jsx",[],"/Users/jwlbaart/git/frontmen/resumator/src/pages/Overview/index.jsx",[],"/Users/jwlbaart/git/frontmen/resumator/src/pages/LivePreviewer/index.jsx",[],"/Users/jwlbaart/git/frontmen/resumator/src/pages/HTMLPreviewer/index.jsx",["344","345"],"import React from \"react\";\nimport { Box, Flex } from \"rebass\";\nimport data from \"../../mock/mock.json\";\nimport {\n  ResumeHeader,\n  ResumeAbout,\n  ResumeExperience,\n  ResumeSkills,\n  ResumeEducation,\n} from \"../../components/ResumeComponents\";\n\nconst HTMLPreviewer = () => {\n  const [resume, SetResume] = React.useState();\n\n  // Using an effect hook is now an assumption on how we will fetch data form API\n  // Can be refactored later when real API comes in\n  React.useEffect(() => {\n    SetResume(data);\n  }, []);\n\n  const resumeView = () => {\n    // TODO map data from api and create new data object\n    if (resume) {\n      console.log(resume.projects[0].stackAndTechniques.length - 1);\n      console.log(resume.projects[2].stackAndTechniques.length - 1);\n    }\n    return resume ? (\n      <>\n        <ResumeHeader\n          name={resume.personalia.firstName}\n          city={resume.personalia.city}\n        />\n        <Flex>\n          <Box minWidth={300}>\n            <ResumeAbout width={1 / 4} text={resume.introduction} />\n            <ResumeSkills skills={resume.skills} />\n            <ResumeEducation />\n          </Box>\n          <ResumeExperience width={3 / 2} experience={resume.experience} />\n        </Flex>\n      </>\n    ) : (\n      <div>...loading</div>\n    );\n  };\n  return (\n    <Box>\n      <Flex\n        width={1000}\n        justifyContent=\"center\"\n        p=\"2rem\"\n        color=\"white\"\n        bg=\"white\"\n        textAlign=\"left\"\n        mb={50}\n      >\n        <Box color=\"secondary\" mb=\"3\">\n          <div id=\"printArea\">{resumeView()}</div>\n        </Box>\n      </Flex>\n    </Box>\n  );\n};\n\nexport default HTMLPreviewer;\n","/Users/jwlbaart/git/frontmen/resumator/src/pages/Creator/index.jsx",[],"/Users/jwlbaart/git/frontmen/resumator/src/context/FirebaseContext/getFirebaseConfig.js",["346"],"import axios from \"axios\";\n\nexport default function () {\n  if (process.env.NODE_ENV === \"production\") {\n    return new Promise((resolve, reject) => {\n      axios\n        .get(\"/__/firebase/init.json\")\n        .then((response) => {\n          resolve(response.data);\n        })\n        .catch(reject);\n    });\n  } else {\n    return new Promise((resolve) => {\n      resolve({\n        apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n        authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n        databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n        projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n        storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n        messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n      });\n    });\n  }\n}\n","/Users/jwlbaart/git/frontmen/resumator/src/config/initialData.js",["347"],"export default {\n  avatar: \"1\",\n  education: [],\n  experience: [],\n  introduction: \"\",\n  personalia: {},\n  projects: [],\n  skills: [],\n  sideProjects: [],\n  publications: [],\n};\n","/Users/jwlbaart/git/frontmen/resumator/src/hooks/useResume.js",[],"/Users/jwlbaart/git/frontmen/resumator/src/components/layout/index.js",[],"/Users/jwlbaart/git/frontmen/resumator/src/components/LivePreviewerComponents/LivePreviewerTemplate.tsx",["348","349","350","351","352","353"],"import React, { useContext, useState, FunctionComponent, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Box } from \"@material-ui/core\";\nimport { FirebaseAppContext } from \"../../context/FirebaseContext\";\nimport { PreviewControls } from \"./PreviewControls\";\nimport { TopSection, PersonaliaModel } from \"./TopSection\";\nimport { Experience } from \"./Experience\";\nimport { ExperienceModel } from \"./ExperienceItem\";\nimport { Skills, SkillModel } from \"./Skills\";\nimport { SideProjects } from \"./SideProjects\";\nimport { SideProjectModel } from \"./SideProjectItem\";\nimport { Education } from \"./Education\";\nimport { EducationModel } from \"./EducationItem\";\nimport PDFPreviewModal from \"./PDFPreviewModal\";\n\ninterface LivePreviewerTemplateProps {\n  data: {\n    id: string;\n    personalia: PersonaliaModel;\n    introduction: string;\n    projects: ExperienceModel[];\n    experience: ExperienceModel[];\n    skills: SkillModel[];\n    sideProjects: SideProjectModel[];\n    publications: SideProjectModel[];\n    education: EducationModel[];\n  };\n}\n\nconst LivePreviewerTemplate: FunctionComponent<LivePreviewerTemplateProps> = ({\n  data,\n}) => {\n  const [showPDFModal, setShowPDFModal] = useState(false);\n  const [dataState, setDataState] = useState(data);\n  const history = useHistory();\n  const { firebase } = useContext(FirebaseAppContext);\n\n  const goTo = (path: string) => history.push(path);\n\n  const onSubmitSection = (sectionKey: string, values: any) => {\n    setDataState((prevState) => ({\n      ...prevState,\n      [sectionKey]: values,\n    }));\n  };\n\n  useEffect(() => {\n    const storeResume = async () => {\n      try {\n        if (dataState.id) {\n          const resumesRef = (firebase as any) // Remove this when typings are provided for the Firebase context.\n            .firestore()\n            .collection(\"resumes\")\n            .doc(dataState.id);\n          await resumesRef.update({\n            ...dataState,\n            isImport: false, // explicitly remove database import flag, but only when saving to firestore\n          });\n        } else {\n          const resumesRef = (firebase as any)\n            .firestore()\n            .collection(\"resumes\")\n            .doc();\n          await resumesRef.set(dataState);\n        }\n      } catch (e) {\n        alert(`Error writing document. ${e.message}`);\n      }\n    };\n    storeResume();\n  }, [dataState, firebase]);\n\n  return (\n    <>\n      <PreviewControls\n        goTo={goTo}\n        setShowPDFModal={setShowPDFModal}\n        resume={dataState}\n      />\n      <TopSection\n        personalia={{\n          ...dataState.personalia,\n          introduction: dataState.introduction,\n        }}\n        onSubmit={(data) => {\n          const { introduction, ...personalia } = data;\n          onSubmitSection(\"personalia\", personalia);\n          onSubmitSection(\"introduction\", introduction);\n        }}\n      />\n      <Box\n        display=\"flex\"\n        flexDirection={{ xs: \"column\", md: \"row\" }}\n        marginTop={1}\n        // gridGap does not use the material spacing system, so 8 is needed here for 8px.\n        gridGap={8}\n      >\n        {/* Left column */}\n        <Box display=\"flex\" flexDirection=\"column\" flex={2} gridGap={8}>\n          <Experience\n            type=\"Projects\"\n            experience={dataState.projects}\n            onSubmit={(data) => onSubmitSection(\"projects\", data)}\n          />\n          <Experience\n            type=\"Work Experience\"\n            experience={dataState.experience}\n            onSubmit={(data) => onSubmitSection(\"experience\", data)}\n          />\n        </Box>\n        {/* Right column */}\n        <Box display=\"flex\" flexDirection=\"column\" flex={1} gridGap={8}>\n          <Skills\n            skills={dataState.skills}\n            onSubmit={(data) => onSubmitSection(\"skills\", data)}\n          />\n          <SideProjects\n            type=\"Side projects\"\n            projects={dataState.sideProjects}\n            onSubmit={(data) => onSubmitSection(\"sideProjects\", data)}\n          />\n          <SideProjects\n            type=\"Publications\"\n            projects={dataState.publications}\n            onSubmit={(data) => onSubmitSection(\"publications\", data)}\n          />\n          <Education\n            education={dataState.education}\n            onSubmit={(data) => onSubmitSection(\"education\", data)}\n          />\n        </Box>\n      </Box>\n\n      <PDFPreviewModal\n        data={dataState}\n        setShowPDFModal={setShowPDFModal}\n        showPDFModal={showPDFModal}\n      />\n    </>\n  );\n};\n\nexport default LivePreviewerTemplate;\n",["354","355"],"/Users/jwlbaart/git/frontmen/resumator/src/pages/Overview/UserRedirect.jsx",[],"/Users/jwlbaart/git/frontmen/resumator/src/components/PDFTemplate/PDFTemplate.jsx",[],"/Users/jwlbaart/git/frontmen/resumator/src/pages/Overview/AdminView.jsx",[],"/Users/jwlbaart/git/frontmen/resumator/src/lib/date.ts",["356","357"],"import { format } from \"date-fns\";\nimport firebase from \"firebase/app\";\nimport LooseObject from \"../../types/LooseObject\";\n\ntype DateOrTimestamp = Date | firebase.firestore.Timestamp;\n\nexport function castDate(timestamp: DateOrTimestamp | undefined): Date | undefined {\n  return timestamp && typeof timestamp === \"object\" && \"seconds\" in timestamp\n    ? (new Date(timestamp.seconds * 1000) as Date)\n    : (timestamp as Date | undefined);\n}\n\nexport function formatDate(\n  timestamp: DateOrTimestamp | string | undefined,\n  dateformat = \"dd-MM-yyyy\"\n): string | undefined {\n  return timestamp && typeof timestamp === \"object\"\n    ? (format(castDate(timestamp) as Date, dateformat) as string)\n    : (timestamp as string | undefined);\n}\n\n/**\n * Cast all Firestore Timestamps to Javascript Dates inside an object\n * @see https://firebase.google.com/docs/reference/js/firebase.firestore.Timestamp\n *\n * @param {*} object\n * @returns\n */\nexport function castDatesInObject(object: LooseObject): LooseObject {\n  return walkObject(object, castDate);\n}\n\n/**\n * Format all dates\n *\n * @param {*} object\n * @returns\n */\nexport function formatDatesInObject(\n  object: LooseObject,\n  format = \"yyyy-MM-dd\"\n): LooseObject {\n  return walkObject(object, (prop: any) => formatDate(prop, format));\n}\n\nfunction walkObject(object: LooseObject, callback: Function): LooseObject {\n  for (const key in object) {\n    let prop = object[key];\n    if (prop && typeof prop === \"object\") {\n      if (prop.seconds || prop instanceof Date) {\n        object[key] = callback(prop);\n      } else {\n        object[key] = walkObject(prop, callback);\n      }\n    }\n  }\n  return object;\n}\n","/Users/jwlbaart/git/frontmen/resumator/src/components/ResumeComponents/index.js",[],"/Users/jwlbaart/git/frontmen/resumator/src/components/layout/Nav.jsx",[],"/Users/jwlbaart/git/frontmen/resumator/src/components/LivePreviewerComponents/PreviewControls.tsx",["358"],"import React, { FunctionComponent } from \"react\";\nimport { Box, Button } from \"@material-ui/core\";\nimport { DropdownButton, SpacedButton } from \"../Material\";\nimport downloadResume from \"../../lib/downloadResume\";\n// Icons\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\n\ninterface PreviewControlsProps {\n  resume: any;\n  goTo: (path: string) => void;\n  setShowPDFModal: (show: boolean) => void;\n}\n\nexport const PreviewControls: FunctionComponent<PreviewControlsProps> = ({\n  resume,\n  goTo,\n  setShowPDFModal,\n}) => {\n  return (\n    <Box\n      display=\"flex\"\n      flexDirection=\"row\"\n      justifyContent=\"space-between\"\n      marginBottom={2}\n    >\n      {/* Back to overview */}\n      <Button\n        variant=\"contained\"\n        startIcon={<ArrowBackIcon />}\n        onClick={() => goTo(`/overview`)}\n      >\n        Back to overview\n      </Button>\n      <Box\n        display=\"flex\"\n        justifyContent=\"flex-end\"\n        flexWrap=\"wrap\"\n        gridGap={8}\n        marginLeft={2}\n      >\n        {/* Download as */}\n        <DropdownButton\n          variant=\"contained\"\n          actions={[\"PDF\", \"DOCX\"]}\n          startIcon={<GetAppIcon />}\n          onClick={(action) => downloadResume(resume, action)}\n        >\n          Download as..\n        </DropdownButton>\n        {/* Preview */}\n        <SpacedButton\n          variant=\"contained\"\n          startIcon={<VisibilityIcon />}\n          onClick={() => setShowPDFModal(true)}\n        >\n          Preview\n        </SpacedButton>\n      </Box>\n    </Box>\n  );\n};\n","/Users/jwlbaart/git/frontmen/resumator/src/components/LivePreviewerComponents/Skills.tsx",["359"],"import React, { FunctionComponent, useState } from \"react\";\nimport { Box, Chip } from \"@material-ui/core\";\nimport { Section } from \"./Section\";\nimport { SectionEditDialog } from \"./SectionEditDialog\";\nimport { FormColumn, FormRow, FormSkillsSelect } from \"../Form\";\n\nexport interface SkillModel {\n  name: string;\n}\ninterface SkillsProps {\n  skills: SkillModel[];\n  onSubmit: (skills: SkillModel[]) => void;\n}\n\nexport const Skills: FunctionComponent<SkillsProps> = ({ skills, onSubmit }) => {\n  const [isEditing, setIsEditing] = useState(false);\n\n  return (\n    <Section\n      title=\"Skills\"\n      action=\"edit\"\n      actionTooltip=\"Edit skills\"\n      actionOnClick={() => setIsEditing(true)}\n    >\n      <Box display=\"flex\" flexWrap=\"wrap\" gridGap={8}>\n        {skills.map((skill) => (\n          <Chip\n            key={skill.name}\n            size=\"small\"\n            variant=\"outlined\"\n            label={skill.name}\n            color=\"secondary\"\n          />\n        ))}\n      </Box>\n\n      <SectionEditDialog\n        title=\"Skills\"\n        data={{ skills }}\n        open={isEditing}\n        onCancel={() => setIsEditing(false)}\n        onSave={(data) => {\n          setIsEditing(false);\n          onSubmit(data.skills);\n        }}\n      >\n        <FormColumn>\n          <FormRow>\n            <FormSkillsSelect name=\"skills\" />\n          </FormRow>\n        </FormColumn>\n      </SectionEditDialog>\n    </Section>\n  );\n};\n","/Users/jwlbaart/git/frontmen/resumator/src/components/LivePreviewerComponents/Experience.tsx",["360"],"import React, { FunctionComponent, useState } from \"react\";\nimport { Box } from \"@material-ui/core\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { ExperienceModel, ExperienceItem } from \"./ExperienceItem\";\nimport { Section } from \"./Section\";\nimport { SectionEditDialog } from \"./SectionEditDialog\";\nimport {\n  FormColumn,\n  FormDatePicker,\n  FormRow,\n  FormSkillsSelect,\n  FormTextField,\n} from \"../Form\";\nimport { FormRichTextEditor } from \"../Form/FormRichTextEditor\";\n\ninterface ExperienceProps {\n  type: string;\n  experience: ExperienceModel[];\n  onSubmit: (value: ExperienceModel[]) => void;\n}\n\nexport const Experience: FunctionComponent<ExperienceProps> = ({\n  type,\n  experience,\n  onSubmit,\n}) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [editItem, setEditItem] = useState<ExperienceModel | null>(null);\n  const [editItemIndex, setEditItemIndex] = useState<number | null>(null);\n\n  const handleDelete = (index: number) => {\n    const filteredExperience = [...experience];\n    filteredExperience.splice(index, 1);\n    onSubmit(filteredExperience);\n  };\n\n  const handleEdit = (item: ExperienceModel, index: number) => {\n    setEditItem(item);\n    setEditItemIndex(index);\n    setIsEditing(true);\n  };\n\n  const handleEditCancel = () => {\n    setIsEditing(false);\n    setEditItem(null);\n    setEditItemIndex(null);\n  };\n\n  const handleSave = (item: ExperienceModel) => {\n    const updatedExperience = [...experience];\n    if (editItemIndex !== null) updatedExperience.splice(editItemIndex!, 1, item);\n    else updatedExperience.push(item);\n\n    // TODO: Sort based on timespan.\n\n    setIsEditing(false);\n    setEditItem(null);\n    setEditItemIndex(null);\n    onSubmit(updatedExperience);\n  };\n\n  return (\n    <Section\n      action=\"add\"\n      title={type}\n      actionTooltip={`Add ${type.toLowerCase()}`}\n      actionOnClick={() => setIsEditing(true)}\n    >\n      <Box display=\"flex\" flexDirection=\"column\" marginTop={-1} gridGap={8}>\n        {experience.map((entry: ExperienceModel, index: number) => (\n          <Box display=\"flex\" flexDirection=\"column\" key={index} gridGap={16}>\n            <ExperienceItem\n              type={type}\n              experienceItem={entry}\n              onDelete={() => handleDelete(index)}\n              onEdit={(item) => handleEdit(item, index)}\n            />\n            {index < experience.length - 1 && <Divider />}\n          </Box>\n        ))}\n      </Box>\n\n      <SectionEditDialog\n        title={editItem ? `Edit ${type}` : `Add ${type}`}\n        data={editItem!}\n        open={isEditing}\n        onCancel={handleEditCancel}\n        onSave={handleSave}\n      >\n        <FormColumn>\n          <FormRow>\n            <FormTextField required name=\"role\" label=\"Role\" />\n            <FormTextField required name=\"company\" label=\"Company\" />\n          </FormRow>\n          <FormRow>\n            <FormDatePicker name=\"startDate\" label=\"Start\" />\n            <FormDatePicker name=\"endDate\" label=\"End\" />\n          </FormRow>\n          <FormRow>\n            <FormRichTextEditor name=\"description\" label=\"Description\" />\n          </FormRow>\n          <FormRow>\n            <FormSkillsSelect name=\"stackAndTechniques\" label=\"Skills\" />\n          </FormRow>\n        </FormColumn>\n      </SectionEditDialog>\n    </Section>\n  );\n};\n","/Users/jwlbaart/git/frontmen/resumator/src/components/LivePreviewerComponents/Education.tsx",["361"],"import React, { useState, FunctionComponent } from \"react\";\nimport { Box, Divider } from \"@material-ui/core\";\nimport { Section } from \"./Section\";\nimport { SectionEditDialog } from \"./SectionEditDialog\";\nimport { FormColumn, FormRow, FormTextField, FormDatePicker } from \"../Form\";\nimport { EducationModel, EducationItem } from \"./EducationItem\";\n\ninterface EducationProps {\n  education: EducationModel[];\n  onSubmit: (value: EducationModel[]) => void;\n}\n\nexport const Education: FunctionComponent<EducationProps> = ({\n  education,\n  onSubmit,\n}) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [editItem, setEditItem] = useState<EducationModel | null>(null);\n  const [editItemIndex, setEditItemIndex] = useState<number | null>(null);\n\n  const handleDelete = (index: number) => {\n    const filteredEducation = [...education];\n    filteredEducation.splice(index, 1);\n    onSubmit(filteredEducation);\n  };\n\n  const handleEdit = (item: EducationModel, index: number) => {\n    setEditItem(item);\n    setEditItemIndex(index);\n    setIsEditing(true);\n  };\n\n  const handleEditCancel = () => {\n    setIsEditing(false);\n    setEditItem(null);\n    setEditItemIndex(null);\n  };\n\n  const handleSave = (item: EducationModel) => {\n    const updatedEducation = [...education];\n    if (editItemIndex !== null) updatedEducation.splice(editItemIndex!, 1, item);\n    else updatedEducation.push(item);\n\n    setIsEditing(false);\n    setEditItem(null);\n    setEditItemIndex(null);\n    onSubmit(updatedEducation);\n  };\n\n  return (\n    <Section\n      title=\"Education\"\n      action=\"add\"\n      actionTooltip=\"Add education\"\n      actionOnClick={() => setIsEditing(true)}\n    >\n      <Box display=\"flex\" flexDirection=\"column\" marginTop={-1} gridGap={8}>\n        {education.map((entry: EducationModel, index: number) => (\n          <Box display=\"flex\" flexDirection=\"column\" key={index} gridGap={16}>\n            <EducationItem\n              educationItem={entry}\n              onDelete={() => handleDelete(index)}\n              onEdit={(item) => handleEdit(item, index)}\n            />\n            {index < education.length - 1 && <Divider />}\n          </Box>\n        ))}\n      </Box>\n\n      <SectionEditDialog\n        title={editItem ? `Edit education` : `Add education`}\n        data={editItem!}\n        open={isEditing}\n        onCancel={handleEditCancel}\n        onSave={handleSave}\n      >\n        <FormColumn>\n          <FormRow>\n            <FormTextField required name=\"name\" label=\"Name\" />\n            <FormTextField required name=\"institute\" label=\"Institute\" />\n          </FormRow>\n          <FormRow>\n            <FormDatePicker name=\"startDate\" label=\"Start\" />\n            <FormDatePicker name=\"endDate\" label=\"End\" />\n          </FormRow>\n        </FormColumn>\n      </SectionEditDialog>\n    </Section>\n  );\n};\n","/Users/jwlbaart/git/frontmen/resumator/src/components/LivePreviewerComponents/SideProjects.tsx",["362"],"import React, { useState, FunctionComponent } from \"react\";\nimport { Box, Divider } from \"@material-ui/core\";\nimport { Section } from \"./Section\";\nimport { SectionEditDialog } from \"./SectionEditDialog\";\nimport { FormColumn, FormRow, FormTextField } from \"../Form\";\nimport { SideProjectModel, SideProjectItem } from \"./SideProjectItem\";\n\ninterface SideProjectProps {\n  type: string;\n  projects: SideProjectModel[];\n  onSubmit: (value: SideProjectModel[]) => void;\n}\n\nexport const SideProjects: FunctionComponent<SideProjectProps> = ({\n  type,\n  projects,\n  onSubmit,\n}) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [editItem, setEditItem] = useState<SideProjectModel | null>(null);\n  const [editItemIndex, setEditItemIndex] = useState<number | null>(null);\n\n  const handleDelete = (index: number) => {\n    const filteredProjects = [...projects];\n    filteredProjects.splice(index, 1);\n    onSubmit(filteredProjects);\n  };\n\n  const handleEdit = (item: SideProjectModel, index: number) => {\n    setEditItem(item);\n    setEditItemIndex(index);\n    setIsEditing(true);\n  };\n\n  const handleEditCancel = () => {\n    setIsEditing(false);\n    setEditItem(null);\n    setEditItemIndex(null);\n  };\n\n  const handleSave = (item: SideProjectModel) => {\n    const updatedProjects = [...projects];\n    if (editItemIndex !== null) updatedProjects.splice(editItemIndex!, 1, item);\n    else updatedProjects.push(item);\n\n    setIsEditing(false);\n    setEditItem(null);\n    setEditItemIndex(null);\n    onSubmit(updatedProjects);\n  };\n\n  return (\n    <Section\n      title={type}\n      action=\"add\"\n      actionTooltip={`Add ${type.toLowerCase()}`}\n      actionOnClick={() => setIsEditing(true)}\n    >\n      <Box display=\"flex\" flexDirection=\"column\" marginTop={-1} gridGap={8}>\n        {projects.map((entry: SideProjectModel, index: number) => (\n          <Box display=\"flex\" flexDirection=\"column\" key={index} gridGap={16}>\n            <SideProjectItem\n              type={type}\n              projectItem={entry}\n              onDelete={() => handleDelete(index)}\n              onEdit={(item) => handleEdit(item, index)}\n            />\n            {index < projects.length - 1 && <Divider />}\n          </Box>\n        ))}\n      </Box>\n\n      <SectionEditDialog\n        title={editItem ? `Edit ${type}` : `Add ${type}`}\n        data={editItem!}\n        open={isEditing}\n        onCancel={handleEditCancel}\n        onSave={handleSave}\n      >\n        <FormColumn>\n          <FormRow>\n            <FormTextField required name=\"title\" label=\"Title\" />\n            <FormTextField name=\"link\" label=\"Link\" />\n          </FormRow>\n          <FormRow>\n            <FormTextField\n              multiline\n              name=\"description\"\n              label=\"Description\"\n              rows={8}\n            />\n          </FormRow>\n        </FormColumn>\n      </SectionEditDialog>\n    </Section>\n  );\n};\n","/Users/jwlbaart/git/frontmen/resumator/src/components/LivePreviewerComponents/TopSection.tsx",["363"],"import React, { FunctionComponent, useState } from \"react\";\nimport { Box, Card, Hidden, Typography } from \"@material-ui/core\";\nimport { formatDate } from \"../../lib/date\";\nimport getAvatarDataUri from \"../../lib/getAvatarDataUri\";\nimport { TooltipIconButton } from \"../Material\";\nimport { SectionHeader } from \"./SectionHeader\";\nimport { SectionEditDialog } from \"./SectionEditDialog\";\nimport { DetailWithIcon } from \"./DetailWithIcon\";\nimport {\n  FormAvatarSelect,\n  FormColumn,\n  FormDatePicker,\n  FormRow,\n  FormTextField,\n} from \"../Form\";\n// Icons\nimport CakeIcon from \"@material-ui/icons/CakeOutlined\";\nimport EmailIcon from \"@material-ui/icons/EmailOutlined\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport PlaceIcon from \"@material-ui/icons/PlaceOutlined\";\n\nexport interface PersonaliaModel {\n  avatar: string;\n  firstName: string;\n  lastName: string;\n  email: string;\n  city: string;\n  dateOfBirth: Date;\n  introduction: string;\n}\ninterface TopSectionProps {\n  personalia: PersonaliaModel;\n  onSubmit: (value: PersonaliaModel) => void;\n}\n\nexport const TopSection: FunctionComponent<TopSectionProps> = ({\n  personalia,\n  onSubmit,\n}) => {\n  const [isEditing, setIsEditing] = useState(false);\n\n  /**\n   * Get first and last name.\n   * Will return John / Jane Doe if the name is not filled in.\n   */\n  const getFirstName = () =>\n    personalia.firstName || (+personalia.avatar > 4 ? \"John\" : \"Jane\");\n  const getLastName = () => personalia.lastName || \"Doe\";\n\n  return (\n    // We use a card directly here instead of a section because this is a custom full width section.\n    <Card>\n      <Box display=\"flex\" flexDirection={{ xs: \"column\", md: \"row\" }}>\n        <Box display=\"flex\" flexDirection=\"row\" padding={1} flex={1}>\n          <Box\n            display=\"flex\"\n            alignItems=\"center\"\n            // As we have a button in mobile mode on the right, 5.5 gives us 44px, the same as the button.\n            marginLeft={{ xs: 5.5, sm: 0 }}\n            flexDirection={{ xs: \"column\", sm: \"row\" }}\n            padding={1}\n            gridGap={16}\n            flex={1}\n          >\n            {/* Avatar */}\n            <Box\n              display=\"flex\"\n              alignItems=\"center\"\n              justifyContent=\"center\"\n              borderRadius=\"50%\"\n              overflow=\"hidden\"\n              width={160}\n              height={160}\n              border={2}\n              flexShrink={0}\n            >\n              <img\n                alt=\"Avatar\"\n                height=\"90%\"\n                // Drop shadow for the avatar, only works if all avatars have a transparent background.\n                style={{\n                  marginTop: \"10%\",\n                  filter: \"drop-shadow(4px 4px 4px rgba(0, 0, 0, 0.7))\",\n                }}\n                src={getAvatarDataUri(personalia.avatar)}\n              />\n            </Box>\n            {/* Personalia */}\n            <Box display=\"flex\" flexDirection=\"column\" marginBottom={1} gridGap={8}>\n              <Typography variant=\"h3\" align=\"left\">\n                {getFirstName()} {getLastName()}\n              </Typography>\n              <DetailWithIcon icon={<EmailIcon />}>\n                {personalia.email}\n              </DetailWithIcon>\n              <DetailWithIcon icon={<PlaceIcon />}>{personalia.city}</DetailWithIcon>\n              <DetailWithIcon icon={<CakeIcon />}>\n                {formatDate(personalia.dateOfBirth)}\n              </DetailWithIcon>\n            </Box>\n          </Box>\n          {/* Edit button in mobile view */}\n          <Hidden mdUp>\n            <Box>\n              <TooltipIconButton\n                color=\"inherit\"\n                tooltip={\"Edit personal details\"}\n                onClick={() => setIsEditing(true)}\n              >\n                <EditIcon fontSize=\"small\" />\n              </TooltipIconButton>\n            </Box>\n          </Hidden>\n        </Box>\n\n        <Box display=\"flex\" flexDirection=\"column\" flex={1}>\n          {/* Have the ability to edit the personalia when in normal view. */}\n          <Hidden smDown>\n            <SectionHeader\n              title={`About ${getFirstName()}`}\n              action=\"edit\"\n              actionTooltip=\"Edit personal details\"\n              actionOnClick={() => setIsEditing(true)}\n            />\n          </Hidden>\n          {/* Only show about in mobile view, the edit option will be somewhere else. */}\n          <Hidden mdUp>\n            <SectionHeader title={`About ${getFirstName()}`} />\n          </Hidden>\n          {/* Introduction text. */}\n          <Box padding={2} paddingTop={0}>\n            <Typography variant=\"body2\">\n              {personalia.introduction ||\n                `${getFirstName()} has nothing to tell you.`}\n            </Typography>\n          </Box>\n        </Box>\n      </Box>\n\n      <SectionEditDialog\n        title=\"Personal details\"\n        data={personalia}\n        open={isEditing}\n        onCancel={() => setIsEditing(false)}\n        onSave={(data) => {\n          setIsEditing(false);\n          onSubmit(data);\n        }}\n      >\n        <FormColumn>\n          <FormRow>\n            <FormTextField required name=\"firstName\" label=\"First name\" />\n            <FormTextField required name=\"lastName\" label=\"Last name\" />\n          </FormRow>\n          <FormRow>\n            <FormTextField required name=\"email\" label=\"Email\" />\n          </FormRow>\n          <FormRow>\n            <FormTextField name=\"city\" label=\"City\" />\n            <FormDatePicker name=\"dateOfBirth\" label=\"Date of birth\" />\n          </FormRow>\n          <FormRow>\n            <FormTextField\n              multiline\n              name=\"introduction\"\n              label=\"Introduction\"\n              rows={8}\n            />\n          </FormRow>\n          <FormRow>\n            <FormAvatarSelect name=\"avatar\" label=\"Avatar\" />\n          </FormRow>\n        </FormColumn>\n      </SectionEditDialog>\n    </Card>\n  );\n};\n","/Users/jwlbaart/git/frontmen/resumator/src/lib/getAvatarDataUri.ts",[],"/Users/jwlbaart/git/frontmen/resumator/src/lib/downloadResume.tsx",["364"],"import React from \"react\";\nimport { pdf as createPdf } from \"@react-pdf/renderer\";\nimport { saveAs } from \"file-saver\";\n\nimport formatResumeFilename from \"./formatResumeFilename\";\nimport createDocx from \"./createDocx\";\nimport getAvatarDataUri from \"./getAvatarDataUri\";\nimport PDFTemplate from \"../components/PDFTemplate/PDFTemplate\";\nimport Resume from \"../../types/Resume\";\n\nexport default async function downloadResume(resume: Resume, type = \"PDF\") {\n  const { firstName, lastName, avatar: avatarName } = resume.personalia;\n  let file: Blob;\n  switch (type.toLowerCase()) {\n    case \"docx\":\n      const [docxTemplate, avatar] = await Promise.all([\n        fetch(\"/template.docx\").then((res) => res.arrayBuffer()),\n        fetch(getAvatarDataUri(avatarName)).then((res) => res.arrayBuffer()),\n      ]);\n      const docx = await createDocx(resume, docxTemplate, avatar);\n      file = new Blob([docx], {\n        type:\n          \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n      });\n      break;\n    case \"pdf\":\n      debugger;\n      const pdfTemplate = <PDFTemplate {...{ resume }} />;\n      const pdf = await createPdf(pdfTemplate).toBlob();\n      file = new Blob([pdf], {\n        type: \"application/pdf\",\n      });\n      break;\n    default:\n      return;\n  }\n  const filename = formatResumeFilename(firstName, lastName, type);\n\n  saveAs(file, filename);\n}\n","/Users/jwlbaart/git/frontmen/resumator/src/components/ResumeComponents/ResumeSkills.js",[],"/Users/jwlbaart/git/frontmen/resumator/src/components/LivePreviewerComponents/PDFPreviewModal.jsx",[],"/Users/jwlbaart/git/frontmen/resumator/src/components/PDFBuilderComponents/PDFSideProjects.jsx",[],"/Users/jwlbaart/git/frontmen/resumator/src/pages/Overview/constants/tableIcons.jsx",[],"/Users/jwlbaart/git/frontmen/resumator/src/config/skills.constants.js",[],"/Users/jwlbaart/git/frontmen/resumator/src/components/ResumeComponents/ResumeExperience.jsx",[],"/Users/jwlbaart/git/frontmen/resumator/src/components/ResumeComponents/ResumeHeader.jsx",[],"/Users/jwlbaart/git/frontmen/resumator/src/components/ResumeComponents/ResumeEducation.jsx",[],"/Users/jwlbaart/git/frontmen/resumator/src/components/ResumeComponents/ResumeAbout.jsx",[],"/Users/jwlbaart/git/frontmen/resumator/src/components/PDFBuilderComponents/index.js",[],"/Users/jwlbaart/git/frontmen/resumator/src/components/LivePreviewerComponents/SectionEditDialog.tsx",["365","366"],"import React, { PropsWithChildren, useEffect } from \"react\";\nimport { FormProvider, useForm } from \"react-hook-form\";\nimport {\n  Box,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogProps,\n  Typography,\n} from \"@material-ui/core\";\nimport { TooltipIconButton } from \"../Material\";\n// Icons\nimport CloseIcon from \"@material-ui/icons/Close\";\n\ninterface SectionEditDialogProps<T> extends DialogProps {\n  title: string;\n  data: T;\n  onCancel: () => void;\n  onSave: (data: T) => void;\n}\n\n// FunctionComponent doesn't work well with additional generics, so we use the props type directly.\n// To have generics work in TSX with an arrow function, we have to hint the compiler to use generics, thus the trailing comma.\nexport const SectionEditDialog = <T,>({\n  title,\n  data,\n  onCancel,\n  onSave,\n  children,\n  ...props\n}: PropsWithChildren<SectionEditDialogProps<T>>) => {\n  const { reset, ...form } = useForm();\n\n  // Reset the form with new data if it changes.\n  useEffect(() => reset({ ...data }), [reset, data]);\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth=\"sm\"\n      aria-labelledby=\"section-edit-dialog-title\"\n      aria-describedby=\"section-edit-dialog-content\"\n      onClose={onCancel}\n      {...props}\n    >\n      {/* Custom title to include a close button, example from material documentation doesn't work. */}\n      <Box\n        display=\"flex\"\n        flexDirection=\"row\"\n        justifyContent=\"space-between\"\n        padding={1}\n      >\n        <Box paddingX={2} paddingY={1}>\n          <Typography id=\"section-edit-dialog-title\" variant=\"h6\">\n            {title}\n          </Typography>\n        </Box>\n        <TooltipIconButton tooltip=\"Close\" onClick={onCancel}>\n          <CloseIcon />\n        </TooltipIconButton>\n      </Box>\n      {/* Content */}\n      <DialogContent id=\"section-edit-dialog-content\">\n        <FormProvider reset={reset} {...form}>\n          <form\n            id=\"section-edit-dialog-form\"\n            onSubmit={form.handleSubmit((formData) => onSave(formData as T))}\n          >\n            {children}\n          </form>\n        </FormProvider>\n      </DialogContent>\n      {/* Actions for cancel and save. */}\n      <DialogActions>\n        <Button onClick={onCancel}>Cancel</Button>\n        <Button type=\"submit\" color=\"primary\" form=\"section-edit-dialog-form\">\n          Save\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","/Users/jwlbaart/git/frontmen/resumator/src/components/LivePreviewerComponents/Section.tsx",["367","368"],"import React, { FunctionComponent } from \"react\";\nimport { Box, Card } from \"@material-ui/core\";\nimport { SectionHeader, SectionHeaderProps } from \"./SectionHeader\";\n\ninterface SectionProps extends SectionHeaderProps {}\n\nexport const Section: FunctionComponent<SectionProps> = ({ children, ...props }) => {\n  return (\n    <Card>\n      <SectionHeader {...props} />\n      <Box padding={2} paddingTop={1}>\n        {children}\n      </Box>\n    </Card>\n  );\n};\n","/Users/jwlbaart/git/frontmen/resumator/src/components/Form/FormRichTextEditor.tsx",["369","370"],"import React, { FunctionComponent } from \"react\";\nimport { Controller, useFormContext } from \"react-hook-form\";\nimport {\n  FormControl,\n  FormControlProps,\n  InputLabel,\n  OutlinedInput,\n} from \"@material-ui/core\";\nimport { FormRichTextDraftEditor } from \"./FormRichTextDraftEditor\";\n\ninterface FormRichTextEditorProps extends FormControlProps {\n  name: string;\n  label: string;\n  rows?: number;\n}\n\nexport const FormRichTextEditor: FunctionComponent<FormRichTextEditorProps> = ({\n  name,\n  label,\n  rows,\n  ...props\n}) => {\n  const { control } = useFormContext();\n\n  return (\n    <Controller\n      defaultValue=\"\"\n      control={control}\n      name={name!}\n      render={({ value, onChange }) => (\n        <FormControl fullWidth size=\"small\" {...props}>\n          <InputLabel\n            shrink\n            variant=\"outlined\"\n            htmlFor=\"form-rich-text-editor-input\"\n          >\n            {label}\n          </InputLabel>\n          <OutlinedInput\n            fullWidth\n            notched\n            id=\"form-rich-text-editor-input\"\n            label={label}\n            inputComponent={() => (\n              <FormRichTextDraftEditor value={value} onChange={onChange} />\n            )}\n          />\n        </FormControl>\n      )}\n    />\n  );\n};\n","/Users/jwlbaart/git/frontmen/resumator/src/components/LivePreviewerComponents/SideProjectItem.tsx",["371"],"import React, { FunctionComponent } from \"react\";\nimport { Box, Link } from \"@material-ui/core\";\nimport { SectionItemHeader, useSectionItemHeaderStyles } from \"./SectionItemHeader\";\n\nexport interface SideProjectModel {\n  title: string;\n  description: string;\n  link: string;\n}\n\ninterface SideProjectItemProps {\n  type: string;\n  projectItem: SideProjectModel;\n  onDelete: () => void;\n  onEdit: (item: SideProjectModel) => void;\n}\n\nexport const SideProjectItem: FunctionComponent<SideProjectItemProps> = ({\n  type,\n  projectItem,\n  onDelete,\n  onEdit,\n}) => {\n  const sectionItemHeaderClasses = useSectionItemHeaderStyles();\n\n  return (\n    <Box className={sectionItemHeaderClasses.container}>\n      <SectionItemHeader\n        title={projectItem.title}\n        type={type.toLowerCase()}\n        classes={sectionItemHeaderClasses}\n        onDelete={() => onDelete()}\n        onEdit={() => onEdit(projectItem)}\n      ></SectionItemHeader>\n      <Box display=\"flex\" flexDirection=\"column\" gridGap={8}>\n        {projectItem.description && <Box>{projectItem.description}</Box>}\n        <Link\n          rel=\"noreferrer noopener\"\n          target=\"_blank\"\n          color=\"secondary\"\n          href={projectItem.link}\n        >\n          {projectItem.link}\n        </Link>\n      </Box>\n    </Box>\n  );\n};\n","/Users/jwlbaart/git/frontmen/resumator/src/components/LivePreviewerComponents/EducationItem.tsx",["372"],"import React, { FunctionComponent } from \"react\";\nimport { Box } from \"@material-ui/core\";\nimport { formatDate } from \"../../lib/date\";\nimport { SectionItemHeader, useSectionItemHeaderStyles } from \"./SectionItemHeader\";\nimport { DetailWithIcon } from \"./DetailWithIcon\";\n// Icons\nimport SchoolIcon from \"@material-ui/icons/School\";\nimport DateRangeIcon from \"@material-ui/icons/DateRangeOutlined\";\n\nexport interface EducationModel {\n  name: string;\n  institute: string;\n  startDate: Date;\n  endDate: Date;\n}\n\ninterface EducationItemProps {\n  educationItem: EducationModel;\n  onDelete: () => void;\n  onEdit: (item: EducationModel) => void;\n}\n\nexport const EducationItem: FunctionComponent<EducationItemProps> = ({\n  educationItem,\n  onDelete,\n  onEdit,\n}) => {\n  const sectionItemHeaderClasses = useSectionItemHeaderStyles();\n\n  const getTimespan = () => {\n    const start = educationItem.startDate;\n    const end = educationItem.endDate;\n\n    if (start && end) return `${formatDate(start)} - ${formatDate(end)}`;\n    if (start && !end) return `${formatDate(start)} - present`;\n    if (!start && end) return `somewhere in the past - ${formatDate(end)}`;\n  };\n\n  return (\n    <Box className={sectionItemHeaderClasses.container}>\n      <SectionItemHeader\n        type=\"education\"\n        title={educationItem.name}\n        classes={sectionItemHeaderClasses}\n        onDelete={() => onDelete()}\n        onEdit={() => onEdit(educationItem)}\n      ></SectionItemHeader>\n      <Box display=\"flex\" flexDirection=\"column\" gridGap={8}>\n        <DetailWithIcon icon={<SchoolIcon />}>\n          {educationItem.institute}\n        </DetailWithIcon>\n        <DetailWithIcon icon={<DateRangeIcon />}>{getTimespan()}</DetailWithIcon>\n      </Box>\n    </Box>\n  );\n};\n","/Users/jwlbaart/git/frontmen/resumator/src/components/LivePreviewerComponents/SectionHeader.tsx",["373"],"import React, { FunctionComponent } from \"react\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport { TooltipIconButton } from \"../Material\";\n// Icons\nimport AddIcon from \"@material-ui/icons/Add\";\nimport EditIcon from \"@material-ui/icons/Edit\";\n\nexport interface SectionHeaderProps {\n  title: string;\n  action?: \"add\" | \"edit\";\n  actionTooltip?: string;\n  actionOnClick?: () => void;\n}\n\nexport const SectionHeader: FunctionComponent<SectionHeaderProps> = ({\n  title,\n  action,\n  actionTooltip,\n  actionOnClick,\n}) => {\n  return (\n    <>\n      {/* Only show a header if a title and/or action are defined. */}\n      {(title || action) && (\n        <Box\n          display=\"flex\"\n          flexDirection=\"row\"\n          alignItems=\"center\"\n          justifyContent=\"space-between\"\n          height={52}\n          paddingTop={1}\n          paddingRight={1}\n          paddingLeft={2}\n        >\n          {/* Only show a title if we actually have a title. */}\n          {title && <Typography variant=\"h5\">{title}</Typography>}\n          {/* Only show an action button if we actually have an action. */}\n          {action && (\n            <TooltipIconButton\n              color=\"inherit\"\n              tooltip={actionTooltip || \"\"}\n              onClick={actionOnClick || (() => {})}\n            >\n              {action === \"add\" && <AddIcon fontSize=\"small\" />}\n              {action === \"edit\" && <EditIcon fontSize=\"small\" />}\n            </TooltipIconButton>\n          )}\n        </Box>\n      )}\n    </>\n  );\n};\n","/Users/jwlbaart/git/frontmen/resumator/src/components/LivePreviewerComponents/DetailWithIcon.tsx",["374","375"],"import React, { FunctionComponent, ReactNode } from \"react\";\nimport { Box } from \"@material-ui/core\";\n\ninterface DetailWithIconProps {\n  icon: ReactNode;\n}\n\nexport const DetailWithIcon: FunctionComponent<DetailWithIconProps> = ({\n  icon,\n  children,\n}) => {\n  return (\n    <Box display=\"flex\" flexDirection=\"row\" alignItems=\"center\" gridGap={8}>\n      {icon}\n      {children ? children : \"---\"}\n    </Box>\n  );\n};\n","/Users/jwlbaart/git/frontmen/resumator/src/components/LivePreviewerComponents/ExperienceItem.tsx",["376"],"import React, { FunctionComponent } from \"react\";\nimport { Box, Chip, makeStyles } from \"@material-ui/core\";\nimport { convertFromRaw, EditorState } from \"draft-js\";\nimport { stateToHTML } from \"draft-js-export-html\";\nimport { formatDate } from \"../../lib/date\";\nimport { SectionItemHeader, useSectionItemHeaderStyles } from \"./SectionItemHeader\";\nimport { DetailWithIcon } from \"./DetailWithIcon\";\n// Icons\nimport BusinessIcon from \"@material-ui/icons/Business\";\nimport DateRangeIcon from \"@material-ui/icons/DateRangeOutlined\";\n\nexport interface ExperienceModel {\n  role: string;\n  company: string;\n  startDate: Date;\n  endDate: Date;\n  description: string;\n  stackAndTechniques: { name: string }[];\n}\n\ninterface ExperienceItemProps {\n  type: string;\n  experienceItem: ExperienceModel;\n  onDelete: () => void;\n  onEdit: (item: ExperienceModel) => void;\n}\n\nconst useStyles = makeStyles({\n  description: {\n    \"& p\": {\n      margin: 0,\n    },\n    \"& ul, ol\": {\n      margin: 0,\n    },\n  },\n});\n\nexport const ExperienceItem: FunctionComponent<ExperienceItemProps> = ({\n  type,\n  experienceItem,\n  onDelete,\n  onEdit,\n}) => {\n  const classes = useStyles();\n  const sectionItemHeaderClasses = useSectionItemHeaderStyles();\n  let description;\n\n  // Parse the description.\n  try {\n    const parsed = convertFromRaw(JSON.parse(experienceItem.description));\n    const editor = EditorState.createWithContent(parsed);\n    description = stateToHTML(editor.getCurrentContent());\n  } catch (err) {\n    // If parsing fails, we just use the string description.\n    description = experienceItem.description;\n  }\n\n  const getTimespan = () => {\n    const start = experienceItem.startDate;\n    const end = experienceItem.endDate;\n\n    if (start && end) return `${formatDate(start)} - ${formatDate(end)}`;\n    if (start && !end) return `${formatDate(start)} - present`;\n    if (!start && end) return `somewhere in the past - ${formatDate(end)}`;\n  };\n\n  return (\n    <Box className={sectionItemHeaderClasses.container}>\n      <SectionItemHeader\n        title={experienceItem.role}\n        type={type.toLowerCase()}\n        classes={sectionItemHeaderClasses}\n        onDelete={() => onDelete()}\n        onEdit={() => onEdit(experienceItem)}\n      ></SectionItemHeader>\n      <Box display=\"flex\" flexDirection=\"column\" gridGap={8}>\n        <DetailWithIcon icon={<BusinessIcon />}>\n          {experienceItem.company}\n        </DetailWithIcon>\n        <DetailWithIcon icon={<DateRangeIcon />}>{getTimespan()}</DetailWithIcon>\n        <Box\n          className={classes.description}\n          dangerouslySetInnerHTML={{ __html: description }}\n        />\n        {experienceItem.stackAndTechniques && (\n          <Box display=\"flex\" flexWrap=\"wrap\" gridGap={8}>\n            {experienceItem.stackAndTechniques.map((skill) => (\n              <Chip\n                key={skill.name}\n                label={skill.name}\n                size=\"small\"\n                variant=\"outlined\"\n                color=\"secondary\"\n              />\n            ))}\n          </Box>\n        )}\n      </Box>\n    </Box>\n  );\n};\n","/Users/jwlbaart/git/frontmen/resumator/src/lib/createDocx.ts",["377","378"],"/// <reference path=\"../../types/docxtemplater/index.d.ts\" />\n/// <reference path=\"../../types/docxtemplater-image-module/index.d.ts\" />\nimport Docxtemplater from \"docxtemplater\";\nimport ImageModule from \"docxtemplater-image-module\";\nimport PizZip from \"pizzip\";\n\nimport Resume from \"../../types/Resume\";\nimport LooseObject from \"../../types/LooseObject\";\nimport { formatDatesInObject } from \"./date\";\n\nexport default async function createDocx(\n  resume: Resume,\n  template: ArrayBuffer,\n  avatar: ArrayBuffer\n) {\n  const imageModule = new ImageModule({\n    centered: false,\n    getImage: (tagValue: string) => avatar, // return avatar regardless of tag value\n    getSize: () => [80, 200],\n  });\n\n  const zip = new PizZip(template);\n  const options = { modules: [imageModule] };\n  const doc = await new Docxtemplater(zip, options);\n\n  const tags = {\n    ...formatDescriptionsInObject(resume),\n    ...resume.personalia, // unnest names, city, date of birth for easier usage inside template\n    image: \"avatar.png\", // ImageModule won't load this file by name but needs it to import binary data correctly\n  };\n  doc.setData(formatDatesInObject(tags, \"MMMM y\"));\n\n  doc.render();\n\n  return await doc.getZip().generate({ type: \"uint8array\" });\n}\n\nfunction formatDescriptionsInObject(object: LooseObject): LooseObject {\n  for (const key in object) {\n    let prop = object[key];\n    if (key === \"description\") {\n      object[\"description\"] = formatDescription(prop); // special tag inside template\n    } else if (typeof prop === \"object\") {\n      object[key] = formatDescriptionsInObject(prop);\n    }\n  }\n  return object;\n}\n\ntype DraftJSBlock = {\n  text: string;\n  type: string;\n  inlineStyleRanges: { offset: number; length: number; style: string }[];\n};\nfunction formatDescription(description: string): string {\n  try {\n    const { blocks } = JSON.parse(description);\n    const output = blocks.reduce((output: string, { text, type }: DraftJSBlock) => {\n      if (type === \"ordered-list-item\" || type === \"unordered-list-item\") {\n        return `${output}${formatListItem(text, type)}`;\n      } else {\n        return `${output}<w:p><w:r><w:t>${text}</w:t></w:r></w:p>`;\n      }\n    }, \"\");\n    return `${output}`;\n  } catch {\n    return description\n      .split(\"\\n\")\n      .map((entry) => `<w:p><w:r><w:t>${entry}</w:t></w:r></w:p>`)\n      .join(\"\");\n  }\n}\n\nfunction formatListItem(\n  text: string,\n  type: \"ordered-list-item\" | \"unordered-list-item\"\n): string {\n  const listId = \"ordered-list-item\"\n    ? 4 // TODO: Find actual listId for ordered lists in template\n    : 3;\n  return (\n    \"<w:p>\" +\n    // List definition values\n    `<w:pPr><w:numPr><w:ilvl w:val=\"0\"/><w:numId w:val=\"${listId}\" /></w:numPr></w:pPr>` +\n    // Actual content\n    `<w:r><w:t>${text}</w:t></w:r>` +\n    \"</w:p>\"\n  );\n}\n","/Users/jwlbaart/git/frontmen/resumator/src/assets/images/avatars/index.js",["379"],"import avatar1 from \"./1.png\";\nimport avatar2 from \"./2.png\";\nimport avatar3 from \"./3.png\";\nimport avatar4 from \"./4.png\";\nimport avatar5 from \"./5.png\";\nimport avatar6 from \"./6.png\";\nimport avatar7 from \"./7.png\";\nimport avatar8 from \"./8.png\";\n\nexport default [\n  {\n    name: \"1\",\n    img: avatar1,\n  },\n  {\n    name: \"2\",\n    img: avatar2,\n  },\n  {\n    name: \"3\",\n    img: avatar3,\n  },\n  {\n    name: \"4\",\n    img: avatar4,\n  },\n  {\n    name: \"5\",\n    img: avatar5,\n  },\n  {\n    name: \"6\",\n    img: avatar6,\n  },\n  {\n    name: \"7\",\n    img: avatar7,\n  },\n  {\n    name: \"8\",\n    img: avatar8,\n  },\n];\n","/Users/jwlbaart/git/frontmen/resumator/src/components/Material/index.ts",[],"/Users/jwlbaart/git/frontmen/resumator/src/components/Form/index.ts",[],"/Users/jwlbaart/git/frontmen/resumator/src/components/PDFBuilderComponents/PDFHeader.jsx",[],"/Users/jwlbaart/git/frontmen/resumator/src/components/PDFBuilderComponents/PDFWorkExperience.jsx",[],"/Users/jwlbaart/git/frontmen/resumator/src/components/PDFBuilderComponents/PDFProjects.jsx",[],"/Users/jwlbaart/git/frontmen/resumator/src/components/LivePreviewerComponents/SectionItemHeader.tsx",["380"],"import React, { FunctionComponent, useState } from \"react\";\nimport {\n  Box,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  makeStyles,\n  Typography,\n} from \"@material-ui/core\";\nimport { TooltipIconButton } from \"../Material\";\n// Icons\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\n\nexport interface SectionItemHeaderProps {\n  title: string;\n  type: string;\n  classes?: {\n    actions: string;\n  };\n  onDelete: () => void;\n  onEdit: () => void;\n}\n\nexport const useSectionItemHeaderStyles = makeStyles({\n  actions: {\n    opacity: 0,\n    transition: \"opacity 150ms ease-out\",\n    pointerEvents: \"none\",\n    alignSelf: \"start\",\n    flexShrink: 0,\n  },\n  container: {\n    \"&:hover $actions\": {\n      opacity: 1,\n      pointerEvents: \"all\",\n    },\n  },\n});\n\nexport const SectionItemHeader: FunctionComponent<SectionItemHeaderProps> = ({\n  title,\n  type,\n  classes,\n  onDelete,\n  onEdit,\n}) => {\n  const [deleteConfirmationOpen, setDeleteConfirmationOpen] = useState(false);\n\n  return (\n    <Box\n      display=\"flex\"\n      flexDirection=\"row\"\n      alignItems=\"center\"\n      justifyContent=\"space-between\"\n    >\n      <Typography variant=\"h6\">{title}</Typography>\n      <Box className={classes?.actions} marginRight={-1}>\n        {/* Delete item */}\n        <TooltipIconButton\n          color=\"inherit\"\n          tooltip={`Delete ${type}`}\n          onClick={() => setDeleteConfirmationOpen(true)}\n        >\n          <DeleteIcon fontSize=\"small\" />\n        </TooltipIconButton>\n        {/* Edit item */}\n        <TooltipIconButton color=\"inherit\" tooltip={`Edit ${type}`} onClick={onEdit}>\n          <EditIcon fontSize=\"small\" />\n        </TooltipIconButton>\n      </Box>\n\n      <Dialog\n        open={deleteConfirmationOpen}\n        onClose={() => setDeleteConfirmationOpen(false)}\n      >\n        <DialogTitle>Delete item</DialogTitle>\n        <DialogContent>\n          <Box>Are you sure you want to delete this item?</Box>\n          <Box>This action cannot be reversed.</Box>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setDeleteConfirmationOpen(false)}>No</Button>\n          <Button\n            onClick={() => {\n              setDeleteConfirmationOpen(false);\n              onDelete();\n            }}\n          >\n            Yes\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Box>\n  );\n};\n","/Users/jwlbaart/git/frontmen/resumator/src/components/Form/FormRichTextDraftEditor.tsx",["381","382","383"],"import React, {\n  FunctionComponent,\n  MouseEvent,\n  ReactNode,\n  useRef,\n  useState,\n} from \"react\";\nimport { Box, Divider, makeStyles } from \"@material-ui/core\";\nimport {\n  ContentState,\n  convertFromHTML,\n  convertFromRaw,\n  convertToRaw,\n  Editor,\n  EditorState,\n  RichUtils,\n} from \"draft-js\";\nimport \"draft-js/dist/Draft.css\";\nimport { TooltipIconButton } from \"../Material\";\n// Icons\nimport FormatListBulletedIcon from \"@material-ui/icons/FormatListBulleted\";\nimport FormatListNumberedIcon from \"@material-ui/icons/FormatListNumbered\";\nimport FormatBoldIcon from \"@material-ui/icons/FormatBold\";\nimport FormatItalicIcon from \"@material-ui/icons/FormatItalic\";\nimport FormatUnderlinedIcon from \"@material-ui/icons/FormatUnderlined\";\n\ninterface FormRichTextDraftEditorProps {\n  value: string;\n  onChange: (value: string) => void;\n}\n\nconst useStyles = makeStyles({\n  editor: {\n    \"& .DraftEditor-root\": {\n      padding: \"4.5px\",\n      height: \"unset\",\n      overflow: \"auto\",\n    },\n    \"& ul, ol\": {\n      margin: 0,\n    },\n  },\n  verticalDivider: {\n    margin: \"0 4px\",\n    height: \"80%\",\n  },\n});\n\nexport const FormRichTextDraftEditor: FunctionComponent<FormRichTextDraftEditorProps> = ({\n  value,\n  onChange,\n}) => {\n  const classes = useStyles();\n  let content;\n\n  // Setup the editor.\n  try {\n    content = convertFromRaw(JSON.parse(value));\n  } catch (err) {\n    // If parsing fails, treat it as a raw text string.\n    const { contentBlocks, entityMap } = convertFromHTML(value);\n    content = ContentState.createFromBlockArray(contentBlocks, entityMap);\n  }\n\n  const editorRef = useRef<Editor>(null);\n  const [editorState, setEditorState] = useState(\n    EditorState.createWithContent(content)\n  );\n\n  const handleFocus = (event: MouseEvent) => {\n    event.preventDefault();\n    event.stopPropagation();\n    editorRef?.current?.focus();\n  };\n\n  /**\n   * Save the changes to the form when focus is lost.\n   */\n  const handleBlur = () => {\n    const raw = convertToRaw(editorState.getCurrentContent());\n    onChange(JSON.stringify(raw));\n  };\n\n  const renderBlockTypeButton = (type: string, tooltip: string, icon: ReactNode) => (\n    <TooltipIconButton\n      tooltip={tooltip}\n      active={hasBlockType(type)}\n      onClick={() => toggleBlockType(type)}\n      onMouseDown={(event) => event.preventDefault()}\n    >\n      {icon}\n    </TooltipIconButton>\n  );\n\n  /**\n   * Set a block type on the current cursor location or selected text.\n   */\n  const toggleBlockType = (type: string) => {\n    setEditorState(RichUtils.toggleBlockType(editorState, type));\n  };\n\n  const hasBlockType = (type: string) => {\n    const selection = editorState.getSelection();\n    const block = editorState\n      .getCurrentContent()\n      .getBlockForKey(selection.getStartKey());\n    return block.getType() === type;\n  };\n\n  const renderStyleButton = (style: string, tooltip: string, icon: ReactNode) => (\n    <TooltipIconButton\n      tooltip={tooltip}\n      active={hasStyle(style)}\n      onClick={() => toggleStyle(style)}\n      onMouseDown={(event) => event.preventDefault()}\n    >\n      {icon}\n    </TooltipIconButton>\n  );\n\n  /**\n   * Set a style on the current cursor location or selected text.\n   */\n  const toggleStyle = (style: string) => {\n    setEditorState(RichUtils.toggleInlineStyle(editorState, style));\n  };\n\n  const hasStyle = (style: string) => editorState.getCurrentInlineStyle().has(style);\n\n  return (\n    <Box\n      display=\"flex\"\n      flexDirection=\"column\"\n      gridGap={4}\n      className={classes.editor}\n      paddingX={1}\n      paddingY={1}\n      height={400}\n      flex={1}\n      onClick={handleFocus}\n      onBlur={handleBlur}\n    >\n      {/* Styling options */}\n      <Box display=\"flex\" flexDirection=\"row\" alignItems=\"center\">\n        {/* Unordered list */}\n        {renderBlockTypeButton(\n          \"unordered-list-item\",\n          \"Unordered List\",\n          <FormatListBulletedIcon fontSize=\"small\" />\n        )}\n        {/* Ordered list */}\n        {renderBlockTypeButton(\n          \"ordered-list-item\",\n          \"Ordered List\",\n          <FormatListNumberedIcon fontSize=\"small\" />\n        )}\n        <Divider orientation=\"vertical\" className={classes.verticalDivider} />\n        {/* Bold */}\n        {renderStyleButton(\"BOLD\", \"Bold\", <FormatBoldIcon fontSize=\"small\" />)}\n        {/* Italic */}\n        {renderStyleButton(\n          \"ITALIC\",\n          \"Italic\",\n          <FormatItalicIcon fontSize=\"small\" />\n        )}\n        {/* Underlined */}\n        {renderStyleButton(\n          \"UNDERLINE\",\n          \"Underlined\",\n          <FormatUnderlinedIcon fontSize=\"small\" />\n        )}\n      </Box>\n      <Divider />\n      <Editor\n        spellCheck\n        ref={editorRef}\n        editorState={editorState}\n        onChange={(state) => setEditorState(state)}\n      />\n    </Box>\n  );\n};\n","/Users/jwlbaart/git/frontmen/resumator/src/components/Material/DropdownButton.tsx",["384","385"],"import React, { FunctionComponent, useState } from \"react\";\nimport { Button, ButtonProps } from \"@material-ui/core\";\nimport { Menu, MenuItem } from \"@material-ui/core\";\n\ninterface DropdownButtonProps extends Omit<ButtonProps, \"onClick\"> {\n  actions: string[];\n  onClick: (action: string) => void;\n}\n\nexport const DropdownButton: FunctionComponent<DropdownButtonProps> = ({\n  actions,\n  children,\n  onClick,\n  ...props\n}) => {\n  const [anchorEl, setAnchorEl] = useState<Element | null>(null);\n\n  /**\n   * Set the target for the menu to bind to.\n   */\n  const handleClick = (event: React.MouseEvent) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  /**\n   * Remove the target for the menu.\n   */\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  /**\n   * Handle a menu item click.\n   */\n  const handleAction = (action: string) => {\n    handleClose();\n    onClick(action);\n  };\n\n  return (\n    <>\n      {/* Trigger button with added properties from this component. */}\n      <Button onClick={handleClick} {...props}>\n        {children}\n      </Button>\n      {/* The menu with possible actions. */}\n      <Menu\n        keepMounted\n        anchorEl={anchorEl}\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        {actions.map((action) => (\n          <MenuItem key={action} onClick={() => handleAction(action)}>\n            {action}\n          </MenuItem>\n        ))}\n      </Menu>\n    </>\n  );\n};\n","/Users/jwlbaart/git/frontmen/resumator/src/components/Form/FormAvatarSelect.tsx",["386","387"],"import React, { FunctionComponent } from \"react\";\nimport { Controller, useFormContext } from \"react-hook-form\";\nimport {\n  Box,\n  FormControl,\n  FormControlProps,\n  InputLabel,\n  makeStyles,\n  OutlinedInput,\n} from \"@material-ui/core\";\nimport avatars from \"../../assets/images/avatars\";\nimport { colors } from \"../../config/theme\";\n\ninterface FormAvatarSelectProps extends FormControlProps {\n  name: string;\n  label: string;\n}\n\nconst useStyles = makeStyles({\n  avatar: {\n    width: \"100px\",\n    height: \"200px\",\n    margin: \"16px\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundSize: \"cover\",\n    cursor: \"pointer\",\n\n    \"&:hover\": {\n      outline: `2px auto ${colors.darkBlue}`,\n    },\n  },\n  selected: {\n    outline: `2px auto ${colors.orange}`,\n  },\n});\n\nexport const FormAvatarSelect: FunctionComponent<FormAvatarSelectProps> = ({\n  name,\n  label,\n  ...props\n}) => {\n  const classes = useStyles();\n  const { control } = useFormContext();\n\n  return (\n    <Controller\n      defaultValue=\"1\"\n      control={control}\n      name={name!}\n      render={({ value, onChange }) => (\n        <FormControl fullWidth size=\"small\" {...props}>\n          <InputLabel shrink variant=\"outlined\" htmlFor=\"form-avatar-selector-input\">\n            {label}\n          </InputLabel>\n          <OutlinedInput\n            fullWidth\n            notched\n            id=\"form-avatar-selector-input\"\n            label={label}\n            inputComponent={() => (\n              <Box\n                display=\"flex\"\n                flexDirection=\"row\"\n                flexWrap=\"wrap\"\n                justifyContent=\"center\"\n              >\n                {avatars.map((avatar, i) => (\n                  <Box\n                    component=\"span\"\n                    className={`${classes.avatar} ${\n                      avatar.name === value && classes.selected\n                    }`}\n                    key={i}\n                    style={{\n                      backgroundImage: `url(${avatar.img})`,\n                    }}\n                    onClick={() => onChange(avatar.name)}\n                  />\n                ))}\n              </Box>\n            )}\n          />\n        </FormControl>\n      )}\n    />\n  );\n};\n","/Users/jwlbaart/git/frontmen/resumator/src/components/Form/FormTextField.tsx",["388","389"],"import React, { FunctionComponent } from \"react\";\nimport { useFormContext } from \"react-hook-form\";\nimport { TextField, TextFieldProps } from \"@material-ui/core\";\n\nexport const FormTextField: FunctionComponent<TextFieldProps> = ({ ...props }) => {\n  const { register } = useFormContext();\n\n  return (\n    <TextField\n      fullWidth\n      variant=\"outlined\"\n      size=\"small\"\n      inputRef={register}\n      {...props}\n    />\n  );\n};\n","/Users/jwlbaart/git/frontmen/resumator/src/components/Form/FormSkillsSelect.tsx",["390","391"],"import React, { FunctionComponent } from \"react\";\nimport { Controller, useFormContext } from \"react-hook-form\";\nimport { FormControlProps } from \"@material-ui/core\";\nimport FormSkillsSelectAutocomplete from \"./FormSkillsSelectAutocomplete\";\n\ninterface FormSkillsSelectProps extends FormControlProps {\n  name: string;\n  label?: string;\n}\n\nexport const FormSkillsSelect: FunctionComponent<FormSkillsSelectProps> = ({\n  name,\n  label,\n  ...props\n}) => {\n  const { control } = useFormContext();\n\n  return (\n    <Controller\n      defaultValue={[]}\n      control={control}\n      name={name!}\n      render={({ value, onChange }) => (\n        <FormSkillsSelectAutocomplete\n          {...props}\n          label={label}\n          value={value}\n          onChange={onChange}\n        />\n      )}\n    />\n  );\n};\n","/Users/jwlbaart/git/frontmen/resumator/src/components/Form/FormRow.tsx",["392"],"import React, { FunctionComponent } from \"react\";\nimport { Box } from \"@material-ui/core\";\n\nexport const FormRow: FunctionComponent = ({ children }) => {\n  return (\n    <Box display=\"flex\" flexDirection=\"row\" gridGap={8}>\n      {children}\n    </Box>\n  );\n};\n","/Users/jwlbaart/git/frontmen/resumator/src/components/Material/SpacedButton.tsx",[],"/Users/jwlbaart/git/frontmen/resumator/src/components/Form/FormDatePicker.tsx",["393","394"],"import React, { FunctionComponent } from \"react\";\nimport { Controller, useFormContext } from \"react-hook-form\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  DatePicker,\n  DatePickerProps,\n  MuiPickersUtilsProvider,\n} from \"@material-ui/pickers\";\n\ntype FormDatePickerProps = Omit<DatePickerProps, \"value\" | \"onChange\">;\n\nexport const FormDatePicker: FunctionComponent<FormDatePickerProps> = ({\n  name,\n  ...props\n}) => {\n  const { control } = useFormContext();\n\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <Controller\n        defaultValue={null}\n        control={control}\n        name={name!}\n        render={({ value, onChange }) => (\n          <DatePicker\n            fullWidth\n            variant=\"inline\"\n            inputVariant=\"outlined\"\n            size=\"small\"\n            format=\"dd-MM-yyyy\"\n            name={name}\n            value={value}\n            onChange={onChange}\n            {...props}\n          />\n        )}\n      />\n    </MuiPickersUtilsProvider>\n  );\n};\n","/Users/jwlbaart/git/frontmen/resumator/src/components/Form/FormColumn.tsx",["395"],"import React, { FunctionComponent } from \"react\";\nimport { Box } from \"@material-ui/core\";\n\nexport const FormColumn: FunctionComponent = ({ children }) => {\n  return (\n    <Box display=\"flex\" flexDirection=\"column\" gridGap={16} flex={1}>\n      {children}\n    </Box>\n  );\n};\n","/Users/jwlbaart/git/frontmen/resumator/src/components/Material/TooltipIconButton.tsx",["396","397"],"import React, { FunctionComponent } from \"react\";\nimport { IconButton, IconButtonProps, Tooltip } from \"@material-ui/core\";\n\ninterface TooltipIconButtonProps extends IconButtonProps {\n  tooltip: string;\n  active?: boolean;\n}\n\nexport const TooltipIconButton: FunctionComponent<TooltipIconButtonProps> = ({\n  tooltip,\n  active,\n  children,\n  ...props\n}) => {\n  return (\n    <Tooltip title={tooltip}>\n      <IconButton\n        aria-label={tooltip}\n        color={active ? \"secondary\" : \"default\"}\n        {...props}\n      >\n        {children}\n      </IconButton>\n    </Tooltip>\n  );\n};\n","/Users/jwlbaart/git/frontmen/resumator/src/components/PDFBuilderComponents/ProjectsExperienceCard.jsx",[],"/Users/jwlbaart/git/frontmen/resumator/src/components/Form/FormSkillsSelectAutocomplete.tsx",["398"],"import React, { FunctionComponent } from \"react\";\nimport { Autocomplete } from \"@material-ui/lab\";\nimport { makeStyles, TextField } from \"@material-ui/core\";\nimport { DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport { skillsConstants } from \"../../config/skills.constants\";\nimport FormSkillsSelectChip from \"./FormSkillsSelectChip\";\n\ninterface Skill {\n  name: string;\n}\n\ninterface FormSkillsSelectPropsAutocomplete {\n  label?: string;\n  value: Skill[];\n  onChange: (skills: Skill[]) => void;\n}\n\nconst useStyles = makeStyles({\n  autocomplete: {\n    // Make sure the input is below the chips.\n    \"& .MuiAutocomplete-input\": {\n      width: \"inherit\",\n    },\n  },\n  textField: {\n    \"& input\": {\n      marginTop: \"4px\",\n    },\n  },\n});\n\nconst FormSkillsSelectAutocomplete: FunctionComponent<FormSkillsSelectPropsAutocomplete> = ({\n  label,\n  value,\n  onChange,\n}) => {\n  const classes = useStyles();\n  /**\n   * Check if the provided option is currently included in the skills.\n   */\n  const getOptionSelected = (option: string, skill: string) => option === skill;\n\n  /**\n   * Handle adding or deleting a skill through the autocomplete input.\n   */\n  const handleSkillChange = (\n    event: object,\n    inputValue: string[],\n    reason: string\n  ) => {\n    const skills = inputValue.map((name) => ({ name }));\n    onChange(skills);\n  };\n\n  /**\n   * Handle deleting a skill by clicking the x on the chip.\n   */\n  const handleSkillDelete = (index: number) =>\n    onChange(value.filter((skill, i) => index !== i));\n\n  /**\n   * Handle when a skill is being dropped in a new position.\n   */\n  const handleDrag = (sourceIndex: number, destinationIndex: number) => {\n    // Not a full copy, but as we don't edit skills that should be okay.\n    const skills = [...value];\n    skills.splice(destinationIndex, 0, skills.splice(sourceIndex, 1)[0]);\n\n    onChange(skills);\n  };\n\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <Autocomplete\n        fullWidth\n        multiple\n        freeSolo\n        disableClearable\n        disableCloseOnSelect\n        id=\"skill-list-autocomplete\"\n        size=\"small\"\n        className={classes.autocomplete}\n        value={value.map((skill) => skill.name)}\n        options={skillsConstants}\n        onChange={handleSkillChange}\n        getOptionSelected={getOptionSelected}\n        renderInput={(params: object) => (\n          <TextField\n            variant=\"outlined\"\n            placeholder=\"Add a library, framework, skill...\"\n            className={value.length ? classes.textField : undefined}\n            label={label}\n            {...params}\n          />\n        )}\n        renderTags={(value: string[]) =>\n          value.map((skill, index) => (\n            // Add a chip for each skill.\n            <FormSkillsSelectChip\n              key={skill}\n              label={skill}\n              index={index}\n              onDrag={handleDrag}\n              onDelete={handleSkillDelete}\n            />\n          ))\n        }\n      />\n    </DndProvider>\n  );\n};\n\nexport default FormSkillsSelectAutocomplete;\n","/Users/jwlbaart/git/frontmen/resumator/src/components/PDFBuilderComponents/PDFDescription.jsx",[],"/Users/jwlbaart/git/frontmen/resumator/src/components/Form/FormSkillsSelectChip.tsx",["399","400"],"import React, { FunctionComponent, useRef } from \"react\";\nimport { Chip, makeStyles } from \"@material-ui/core\";\nimport { DropTargetMonitor, useDrag, useDrop } from \"react-dnd\";\n\ninterface FormSkillsSelectChipProps {\n  label: string;\n  index: number;\n  onDrag: (sourceIndex: number, destinationIndex: number) => void;\n  onDelete: (index: number) => void;\n}\n\ninterface DragItem {\n  type: string;\n  index: number;\n}\n\nconst DNDTYPE = \"SkillsChip\";\nconst useStyles = makeStyles({\n  chip: {\n    margin: \"4px\",\n    backgroundColor: \"#ffffff\",\n    cursor: \"move\",\n    // Needed to keep the rounded edged when dragging\n    transform: \"translate(0, 0)\",\n  },\n});\n\nconst FormSkillsSelectChip: FunctionComponent<FormSkillsSelectChipProps> = ({\n  label,\n  index,\n  onDrag,\n  onDelete,\n}: FormSkillsSelectChipProps) => {\n  const classes = useStyles();\n\n  /**\n   * Create a reference to attach to the Component used for dragging and dropping.\n   */\n  const ref = useRef(null);\n\n  /**\n   * Setup the chip drag handler.\n   */\n  const [, drag] = useDrag({\n    item: { index, type: DNDTYPE },\n  });\n\n  /**\n   * Setup the chip drop handler.\n   */\n  const [, drop] = useDrop({\n    accept: DNDTYPE,\n    hover(item: DragItem, monitor: DropTargetMonitor) {\n      if (!ref.current) return;\n\n      const sourceIndex = item.index;\n      const destinationIndex = index;\n\n      // Don't replace items with themselves.\n      if (sourceIndex === destinationIndex) return;\n\n      const hoverBoundingRect = (ref.current! as Element).getBoundingClientRect();\n      const clientOffset = monitor.getClientOffset();\n      if (!clientOffset) return;\n\n      // Take a % of the width and height.\n      const hoverWidth = hoverBoundingRect.width * 0.3;\n      const hoverHeight = hoverBoundingRect.height * 0.1;\n\n      // Use the remaining % as hover hit box.\n      const hoverTop = hoverBoundingRect.top + hoverHeight;\n      const hoverRight = hoverBoundingRect.right - hoverWidth;\n      const hoverBottom = hoverBoundingRect.bottom - hoverHeight;\n      const hoverLeft = hoverBoundingRect.left + hoverWidth;\n\n      // Only drag when the position matches the hover hit box.\n      if (clientOffset.x < hoverLeft || clientOffset.x > hoverRight) return;\n      if (clientOffset.y < hoverTop || clientOffset.y > hoverBottom) return;\n\n      onDrag(sourceIndex, destinationIndex);\n      item.index = destinationIndex;\n    },\n  });\n\n  // Enable drag & drop.\n  drag(drop(ref));\n\n  return (\n    <Chip\n      size=\"small\"\n      variant=\"outlined\"\n      color=\"secondary\"\n      className={classes.chip}\n      ref={ref}\n      label={label}\n      onDelete={() => onDelete(index)}\n      // Stop propagation of the mouse event to avoid it being swallowed by the autocomplete.\n      // If the event is swallowed, drag & drop doesn't work.\n      onMouseDown={(event) => event.stopPropagation()}\n    />\n  );\n};\n\nexport default FormSkillsSelectChip;\n","/Users/jwlbaart/git/frontmen/resumator/src/components/PDFBuilderComponents/PDFEducation.jsx",[],"/Users/jwlbaart/git/frontmen/resumator/src/components/PDFBuilderComponents/PDFSkills.jsx",[],"/Users/jwlbaart/git/frontmen/resumator/src/components/PDFBuilderComponents/PDFIntroduction.jsx",[],"/Users/jwlbaart/git/frontmen/resumator/src/lib/formatResumeFilename.ts",[],{"ruleId":"401","replacedBy":"402"},{"ruleId":"403","replacedBy":"404"},{"ruleId":"405","severity":1,"message":"406","line":24,"column":7,"nodeType":"407","messageId":"408","endLine":24,"endColumn":18},{"ruleId":"405","severity":1,"message":"406","line":25,"column":7,"nodeType":"407","messageId":"408","endLine":25,"endColumn":18},{"ruleId":"409","severity":1,"message":"410","line":3,"column":1,"nodeType":"411","endLine":25,"endColumn":2},{"ruleId":"409","severity":1,"message":"412","line":1,"column":1,"nodeType":"411","endLine":11,"endColumn":3},{"ruleId":"413","severity":1,"message":"414","line":1,"column":39,"nodeType":"415","messageId":"416","endLine":1,"endColumn":56},{"ruleId":"413","severity":1,"message":"417","line":6,"column":22,"nodeType":"415","messageId":"416","endLine":6,"endColumn":37},{"ruleId":"413","severity":1,"message":"418","line":8,"column":10,"nodeType":"415","messageId":"416","endLine":8,"endColumn":25},{"ruleId":"413","severity":1,"message":"419","line":9,"column":18,"nodeType":"415","messageId":"416","endLine":9,"endColumn":28},{"ruleId":"413","severity":1,"message":"420","line":11,"column":10,"nodeType":"415","messageId":"416","endLine":11,"endColumn":26},{"ruleId":"413","severity":1,"message":"421","line":13,"column":10,"nodeType":"415","messageId":"416","endLine":13,"endColumn":24},{"ruleId":"401","replacedBy":"402"},{"ruleId":"403","replacedBy":"404"},{"ruleId":"413","severity":1,"message":"422","line":2,"column":8,"nodeType":"415","messageId":"416","endLine":2,"endColumn":16},{"ruleId":"413","severity":1,"message":"423","line":3,"column":8,"nodeType":"415","messageId":"416","endLine":3,"endColumn":19},{"ruleId":"413","severity":1,"message":"414","line":1,"column":17,"nodeType":"415","messageId":"416","endLine":1,"endColumn":34},{"ruleId":"413","severity":1,"message":"414","line":1,"column":17,"nodeType":"415","messageId":"416","endLine":1,"endColumn":34},{"ruleId":"413","severity":1,"message":"414","line":1,"column":17,"nodeType":"415","messageId":"416","endLine":1,"endColumn":34},{"ruleId":"413","severity":1,"message":"414","line":1,"column":27,"nodeType":"415","messageId":"416","endLine":1,"endColumn":44},{"ruleId":"413","severity":1,"message":"414","line":1,"column":27,"nodeType":"415","messageId":"416","endLine":1,"endColumn":44},{"ruleId":"413","severity":1,"message":"414","line":1,"column":17,"nodeType":"415","messageId":"416","endLine":1,"endColumn":34},{"ruleId":"413","severity":1,"message":"424","line":9,"column":8,"nodeType":"415","messageId":"416","endLine":9,"endColumn":14},{"ruleId":"413","severity":1,"message":"425","line":1,"column":17,"nodeType":"415","messageId":"416","endLine":1,"endColumn":34},{"ruleId":"413","severity":1,"message":"426","line":9,"column":3,"nodeType":"415","messageId":"416","endLine":9,"endColumn":14},{"ruleId":"413","severity":1,"message":"414","line":1,"column":17,"nodeType":"415","messageId":"416","endLine":1,"endColumn":34},{"ruleId":"413","severity":1,"message":"427","line":3,"column":25,"nodeType":"415","messageId":"416","endLine":3,"endColumn":43},{"ruleId":"413","severity":1,"message":"414","line":1,"column":17,"nodeType":"415","messageId":"416","endLine":1,"endColumn":34},{"ruleId":"413","severity":1,"message":"428","line":5,"column":3,"nodeType":"415","messageId":"416","endLine":5,"endColumn":19},{"ruleId":"413","severity":1,"message":"414","line":1,"column":17,"nodeType":"415","messageId":"416","endLine":1,"endColumn":34},{"ruleId":"413","severity":1,"message":"414","line":1,"column":17,"nodeType":"415","messageId":"416","endLine":1,"endColumn":34},{"ruleId":"413","severity":1,"message":"414","line":1,"column":17,"nodeType":"415","messageId":"416","endLine":1,"endColumn":34},{"ruleId":"413","severity":1,"message":"414","line":1,"column":17,"nodeType":"415","messageId":"416","endLine":1,"endColumn":34},{"ruleId":"413","severity":1,"message":"429","line":1,"column":36,"nodeType":"415","messageId":"416","endLine":1,"endColumn":45},{"ruleId":"413","severity":1,"message":"414","line":1,"column":17,"nodeType":"415","messageId":"416","endLine":1,"endColumn":34},{"ruleId":"413","severity":1,"message":"424","line":7,"column":8,"nodeType":"415","messageId":"416","endLine":7,"endColumn":14},{"ruleId":"413","severity":1,"message":"423","line":8,"column":8,"nodeType":"415","messageId":"416","endLine":8,"endColumn":19},{"ruleId":"409","severity":1,"message":"430","line":10,"column":1,"nodeType":"411","endLine":43,"endColumn":3},{"ruleId":"413","severity":1,"message":"414","line":1,"column":17,"nodeType":"415","messageId":"416","endLine":1,"endColumn":34},{"ruleId":"413","severity":1,"message":"414","line":2,"column":3,"nodeType":"415","messageId":"416","endLine":2,"endColumn":20},{"ruleId":"413","severity":1,"message":"431","line":3,"column":3,"nodeType":"415","messageId":"416","endLine":3,"endColumn":13},{"ruleId":"413","severity":1,"message":"429","line":4,"column":3,"nodeType":"415","messageId":"416","endLine":4,"endColumn":12},{"ruleId":"413","severity":1,"message":"414","line":1,"column":17,"nodeType":"415","messageId":"416","endLine":1,"endColumn":34},{"ruleId":"413","severity":1,"message":"432","line":2,"column":18,"nodeType":"415","messageId":"416","endLine":2,"endColumn":29},{"ruleId":"413","severity":1,"message":"414","line":1,"column":17,"nodeType":"415","messageId":"416","endLine":1,"endColumn":34},{"ruleId":"413","severity":1,"message":"428","line":6,"column":3,"nodeType":"415","messageId":"416","endLine":6,"endColumn":19},{"ruleId":"413","severity":1,"message":"414","line":1,"column":17,"nodeType":"415","messageId":"416","endLine":1,"endColumn":34},{"ruleId":"413","severity":1,"message":"433","line":3,"column":21,"nodeType":"415","messageId":"416","endLine":3,"endColumn":35},{"ruleId":"413","severity":1,"message":"414","line":1,"column":17,"nodeType":"415","messageId":"416","endLine":1,"endColumn":34},{"ruleId":"413","severity":1,"message":"428","line":3,"column":10,"nodeType":"415","messageId":"416","endLine":3,"endColumn":26},{"ruleId":"413","severity":1,"message":"414","line":1,"column":17,"nodeType":"415","messageId":"416","endLine":1,"endColumn":34},{"ruleId":"413","severity":1,"message":"414","line":1,"column":17,"nodeType":"415","messageId":"416","endLine":1,"endColumn":34},{"ruleId":"413","severity":1,"message":"434","line":6,"column":3,"nodeType":"415","messageId":"416","endLine":6,"endColumn":18},{"ruleId":"413","severity":1,"message":"414","line":1,"column":17,"nodeType":"415","messageId":"416","endLine":1,"endColumn":34},{"ruleId":"413","severity":1,"message":"414","line":1,"column":17,"nodeType":"415","messageId":"416","endLine":1,"endColumn":34},{"ruleId":"413","severity":1,"message":"435","line":2,"column":22,"nodeType":"415","messageId":"416","endLine":2,"endColumn":37},{"ruleId":"413","severity":1,"message":"414","line":1,"column":17,"nodeType":"415","messageId":"416","endLine":1,"endColumn":34},{"ruleId":"413","severity":1,"message":"414","line":1,"column":17,"nodeType":"415","messageId":"416","endLine":1,"endColumn":34},{"ruleId":"413","severity":1,"message":"436","line":3,"column":10,"nodeType":"415","messageId":"416","endLine":3,"endColumn":27},"no-native-reassign",["437"],"no-negated-in-lhs",["438"],"no-console","Unexpected console statement.","MemberExpression","unexpected","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","Assign object to a variable before exporting as module default","@typescript-eslint/no-unused-vars","'FunctionComponent' is defined but never used.","Identifier","unusedVar","'PersonaliaModel' is defined but never used.","'ExperienceModel' is defined but never used.","'SkillModel' is defined but never used.","'SideProjectModel' is defined but never used.","'EducationModel' is defined but never used.","'firebase' is defined but never used.","'LooseObject' is defined but never used.","'Resume' is defined but never used.","'PropsWithChildren' is defined but never used.","'DialogProps' is defined but never used.","'SectionHeaderProps' is defined but never used.","'FormControlProps' is defined but never used.","'ReactNode' is defined but never used.","Assign array to a variable before exporting as module default","'MouseEvent' is defined but never used.","'ButtonProps' is defined but never used.","'TextFieldProps' is defined but never used.","'DatePickerProps' is defined but never used.","'IconButtonProps' is defined but never used.","'DropTargetMonitor' is defined but never used.","no-global-assign","no-unsafe-negation"]